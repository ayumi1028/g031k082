情報システム演習A　第6回　課題 <br />
基礎課題１ <br />
●フレームワーク導入のメリット <br />
　・Webアプリケーション開発において、各Webアプリケーションに共通して必要な機能を提供してくれるため、開発工数を短くすることができる。<br />
　・開発生産性を上げることができる。 <br />
　・フレームワークを導入することで、開発者はWebアプリケーションフレームワークのクラス・ライブラリを通してwebアプリケーションを開発することになり、ある程度のコーディングルールが課されるため、品質の均一化、コード自体の保守性、拡張性を確保することができる。また、フレームワークを知っている人であれば誰でも短時間で実装を理解できる。 <br />
●フレームワーク導入のデメリット <br />
　・アプリケーションを拡張する際に、フレームワークが提供する仕組みに沿った形で行　う必要がある。その拡張する仕組みが複雑なフレームワーク、あるいは拡張機能が複雑だった場合、より多くのコストが必要になる場合がある。 <br />
　・フレームワークを習得する上で、様々なルールを覚えなくてはならない。 <br />
　・フレームワーク部分に問題があった時に発見することが困難である。 <br />
●PHPフレームワークの特徴 <br /> 
　・Cake PHP <br />
　　日本で最も人気のあるフレームワークであり、「設定より規約」を重視しているため、多くのルールがある。Ruby on Railの思想に影響を受けて開発されている。データベースへアクセスするコードを書かずにデータベースを扱うActiveRecordや、基本的な登録、編集、表示、削除などの動作を自動的に提供するScaffolding機能を提供しているため、わずか数分程度の作業でデータベース内のデータを更新するようなアプリケーションを作成することも可能である。 <br />
　・symfony <br />
　　PHPによるフレームワーク開発を普及する原動力となったフレームワーク。非常に大きなシステムであり、PHPの弱みとされてきたオブジェクト指向を活かす工夫と、PHPの強みとされてきた処理速度とスケーラビリティの保持により、複数人での開発などの大規模システム向けのフレームワークになっている。多機能な分、インストールや習得にも多くの時間がかかる。MVCモデルに従ったフレームワークで、PHPで書かれている。<br />
　・マイクロフレームワーク<br />
　　どこでも気軽に使える簡単で便利な世界最軽量のPHP用MVCフレームワーク。必要最小限の機能だけを搭載している。<br />
●Ruby on Railsの特徴<br />
　2004年に公開されたWebフレームワークである。データベースを利用したWebアプリケーション開発において、新たに描く必要のあるコードを大幅に減らし開発期間を短縮できるという特徴を持っている。また、MVCモデルをサポートしており、データベースに関する処理を担うモデル、データの表示を行うビュー、それらを制御するコントローラの雛形を自動生成する機能を持っている。データの作成、読み込み、更新、削除(CRUD)のみを行うような単純なWebアプリケーションであれば、データテーブルの作成と雛形の自動生成を行うのみでほとんどの部分が開発できてしまう。Webアプリケーションの多くはCRUD処理を中核としているので、Ruby on Railを使うことによって多くのコードの作成を自動化することができ、開発期間を短縮できる。
